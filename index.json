[{"uri":"https://kMutagene.github.io/FSharpColors/explanations/some-post.html","title":"Some Explanation","content":"\r\n# Some Explanation\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nisi diam, vehicula quis blandit id, suscipit sed libero. Proin at diam dolor. In hac habitasse platea dictumst. Donec quis dui vitae quam eleifend dignissim non sed libero. In hac habitasse platea dictumst. In ullamcorper mollis risus, a vulputate quam accumsan at. Donec sed felis sodales, blandit orci id, vulputate orci.\r\n\r\nIn est nulla, ornare vitae elit sed, consequat sollicitudin dui. Duis posuere nulla malesuada elit volutpat ultricies. Mauris et tellus tortor. In ligula elit, pellentesque eget est et, mattis rhoncus nisl. Sed orci ex, mollis quis justo eu, dapibus tincidunt turpis. Sed rhoncus odio non lacus ullamcorper volutpat. Suspendisse blandit ullamcorper condimentum. Quisque et viverra nisi. Vivamus in mollis nulla. Nulla faucibus sed ligula et blandit.\r\n\r\nVivamus nec libero faucibus, cursus ex et, consequat mauris. Pellentesque commodo ullamcorper vestibulum. Donec efficitur, ipsum et dapibus varius, purus mauris gravida augue, eu mattis lorem turpis eget dui. Curabitur nibh erat, posuere sed eros a, blandit venenatis risus. Vestibulum cursus imperdiet ultrices. In eu efficitur dui, eget tempus enim. Nunc imperdiet, enim et sagittis lacinia, lacus metus eleifend purus, blandit pellentesque leo ante ac velit. Nam ac sagittis est. Cras accumsan, odio vel lacinia mollis, metus tortor malesuada nisi, et consectetur neque quam in erat. Sed ultricies aliquam hendrerit. Etiam non aliquam ipsum, id rutrum magna. Morbi id tincidunt mauris. Vestibulum nec iaculis massa. Etiam fringilla, orci quis faucibus vulputate, risus nibh finibus nisl, et vehicula ipsum leo a tortor. Curabitur mauris elit, bibendum vitae velit at, dignissim ornare arcu.\r\n\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/tutorials/how-to-start.html","title":"Getting started","content":"\r\n# How to start in 60 seconds\r\n\r\n1. Make sure you've installed .Net Core version defined in [global.json](global.json)\r\n2. Run `dotnet tool restore` to install all developer tools required to build the project\r\n3. Run `dotnet fake build` to build default target of [build script](build.fsx)\r\n4. To run tests use `dotnet fake build -t Test`\r\n5. To build documentation use `dotnet fake build -t Docs`\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/tutorials/some-post.html","title":"Some Post","content":"\r\n# Some Post\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nisi diam, vehicula quis blandit id, suscipit sed libero. Proin at diam dolor. In hac habitasse platea dictumst. Donec quis dui vitae quam eleifend dignissim non sed libero. In hac habitasse platea dictumst. In ullamcorper mollis risus, a vulputate quam accumsan at. Donec sed felis sodales, blandit orci id, vulputate orci.\r\n\r\nIn est nulla, ornare vitae elit sed, consequat sollicitudin dui. Duis posuere nulla malesuada elit volutpat ultricies. Mauris et tellus tortor. In ligula elit, pellentesque eget est et, mattis rhoncus nisl. Sed orci ex, mollis quis justo eu, dapibus tincidunt turpis. Sed rhoncus odio non lacus ullamcorper volutpat. Suspendisse blandit ullamcorper condimentum. Quisque et viverra nisi. Vivamus in mollis nulla. Nulla faucibus sed ligula et blandit.\r\n\r\nVivamus nec libero faucibus, cursus ex et, consequat mauris. Pellentesque commodo ullamcorper vestibulum. Donec efficitur, ipsum et dapibus varius, purus mauris gravida augue, eu mattis lorem turpis eget dui. Curabitur nibh erat, posuere sed eros a, blandit venenatis risus. Vestibulum cursus imperdiet ultrices. In eu efficitur dui, eget tempus enim. Nunc imperdiet, enim et sagittis lacinia, lacus metus eleifend purus, blandit pellentesque leo ante ac velit. Nam ac sagittis est. Cras accumsan, odio vel lacinia mollis, metus tortor malesuada nisi, et consectetur neque quam in erat. Sed ultricies aliquam hendrerit. Etiam non aliquam ipsum, id rutrum magna. Morbi id tincidunt mauris. Vestibulum nec iaculis massa. Etiam fringilla, orci quis faucibus vulputate, risus nibh finibus nisl, et vehicula ipsum leo a tortor. Curabitur mauris elit, bibendum vitae velit at, dignissim ornare arcu.\r\n\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/explanations/overview.html","title":"FSharpColors Overview","content":"\r\n(***hide***)\r\n#r \"../../../src/FSharpColors/bin/Release/netstandard2.0/FSharpColors.dll\"\r\n\r\n(**\r\n# FSharpColors\r\n\r\nFSharpColors is a lightweight utility library to create and manipulate colors completely written in F#.\r\n*)\r\n\r\nopen FSharpColors\r\n\r\nColor.fromRGB 13 3 7\r\n\r\n(**\r\nHere is the current feature set:\r\n\r\n - Converting bewteen\r\n   - (a) r g b values\r\n   - \"(a)rgb(...)\" strings\r\n   - c m y k values \r\n   - \"cmyk(...)\" strings\r\n   - W3C conform color keywords (such as \"cyan\" for rgb(0,255,255))\r\n   - hex strings (also with 0x prefix)\r\n   - webcolors (hex strings without 0x and w # prefix)\r\n\r\n - DU abstraction of all W3C conform color keywords\r\n*)"},{"uri":"https://kMutagene.github.io/FSharpColors/how-tos/createColors.html","title":"Creating Colors","content":"\r\n(***hide***)\r\n#r \"../../../build/FSharpColors.dll\"\r\nopen FSharpColors\r\n\r\n(**\r\nCreating colors from input\r\n--------------------------\r\nFSharpColors supports parsing both raw color values and string representations (often found on the web) of them\r\n\r\n### (a)rgb\r\n*)\r\n\r\nColor.fromARGB 100 100 100 100\r\nColor.fromARGBString \"argb(100,100,100,100)\"\r\n\r\nColor.fromRGB 100 100 100\r\nColor.fromRGBString \"rgb(100,100,100)\"\r\n\r\n(**\r\n### cmyk\r\n*)\r\n\r\nColor.fromCMYK 0. 0. 0. 0.60\r\nColor.fromCMYKString \"cmyk(0%,0%,0%,60%)\"\r\n\r\n(**\r\n### Hex\r\n*)\r\n\r\n//for hex strings, parsing both with and without the prefix is supported\r\nColor.fromHexString \"FFFFFF\"\r\nColor.fromHexString \"0xFFFFFF\"\r\n\r\n(**\r\n### Webcolors\r\n*)\r\n\r\nColor.fromWebColorString \"#FFFFFF\"\r\nColor.fromStandardWebColor StandardWebColor.AntiqueWhite\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/how-tos/script.html","title":"Sample sample","content":"\r\n(**\r\nLiterate script\r\n===============\r\n\r\nThis file demonstrates how to write literate F# script\r\nfiles (`*.fsx`) that can be transformed into nice HTML\r\n\r\nAs you can see, a comment starting with double asterisk\r\nis treated as part of the document and is transformed\r\nusing Markdown, which means that you can use:\r\n\r\n - Unordered or ordered lists\r\n - Text formatting including **bold** and _emphasis_\r\n\r\nAnd numerous other [Markdown][md] features.\r\n\r\n [md]: http://daringfireball.net/projects/markdown\r\n\r\nWriting F# code\r\n---------------\r\nCode that is not inside comment will be formatted as\r\na sample snippet (which also means that you can\r\nrun it in Visual Studio or MonoDevelop).\r\n*)\r\n\r\n/// The Hello World of functional languages!\r\nlet rec factorial x =\r\n  if x = 0 then 1\r\n  else x * (factorial (x - 1))\r\n\r\nlet f10 = factorial 10\r\n\r\n(**\r\nHiding code\r\n-----------\r\n\r\nIf you want to include some code in the source code,\r\nbut omit it from the output, you can use the `hide`\r\ncommand.\r\n*)\r\n\r\n(*** hide ***)\r\n/// This is a hidden answer\r\nlet hidden = 42\r\n\r\n(**\r\nThe value will be defined in the F# code and so you\r\ncan use it from other (visible) code and get correct\r\ntool tips:\r\n*)\r\n\r\nlet answer = hidden\r\n\r\n(**\r\nMoving code around\r\n------------------\r\n\r\nSometimes, it is useful to first explain some code that\r\nhas to be located at the end of the snippet (perhaps\r\nbecause it uses some definitions discussed in the middle).\r\nThis can be done using `include` and `define` commands.\r\n\r\nThe following snippet gets correct tool tips, even though\r\nit uses `laterFunction`:\r\n*)\r\n\r\n(*** include:later-bit ***)\r\n\r\n(**\r\nThen we can explain how `laterFunction` is defined:\r\n*)\r\n\r\nlet laterFunction() =\r\n  \"Not very difficult, is it?\"\r\n\r\n(**\r\nThis example covers pretty much all features that are\r\ncurrently implemented in `literate.fsx`, but feel free\r\nto [fork the project on GitHub][fs] and add more\r\nfeatures or report bugs!\r\n\r\n  [fs]: https://github.com/fsprojects/FSharp.Formatting\r\n\r\n*)\r\n\r\n(*** define:later-bit ***)\r\nlet sample =\r\n  laterFunction()\r\n  |> printfn \"Got: %s\""},{"uri":"https://kMutagene.github.io/FSharpColors/explanations/some-post.html","title":"Some Explanation","content":"\r\n# Some Explanation\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nisi diam, vehicula quis blandit id, suscipit sed libero. Proin at diam dolor. In hac habitasse platea dictumst. Donec quis dui vitae quam eleifend dignissim non sed libero. In hac habitasse platea dictumst. In ullamcorper mollis risus, a vulputate quam accumsan at. Donec sed felis sodales, blandit orci id, vulputate orci.\r\n\r\nIn est nulla, ornare vitae elit sed, consequat sollicitudin dui. Duis posuere nulla malesuada elit volutpat ultricies. Mauris et tellus tortor. In ligula elit, pellentesque eget est et, mattis rhoncus nisl. Sed orci ex, mollis quis justo eu, dapibus tincidunt turpis. Sed rhoncus odio non lacus ullamcorper volutpat. Suspendisse blandit ullamcorper condimentum. Quisque et viverra nisi. Vivamus in mollis nulla. Nulla faucibus sed ligula et blandit.\r\n\r\nVivamus nec libero faucibus, cursus ex et, consequat mauris. Pellentesque commodo ullamcorper vestibulum. Donec efficitur, ipsum et dapibus varius, purus mauris gravida augue, eu mattis lorem turpis eget dui. Curabitur nibh erat, posuere sed eros a, blandit venenatis risus. Vestibulum cursus imperdiet ultrices. In eu efficitur dui, eget tempus enim. Nunc imperdiet, enim et sagittis lacinia, lacus metus eleifend purus, blandit pellentesque leo ante ac velit. Nam ac sagittis est. Cras accumsan, odio vel lacinia mollis, metus tortor malesuada nisi, et consectetur neque quam in erat. Sed ultricies aliquam hendrerit. Etiam non aliquam ipsum, id rutrum magna. Morbi id tincidunt mauris. Vestibulum nec iaculis massa. Etiam fringilla, orci quis faucibus vulputate, risus nibh finibus nisl, et vehicula ipsum leo a tortor. Curabitur mauris elit, bibendum vitae velit at, dignissim ornare arcu.\r\n\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/tutorials/how-to-start.html","title":"Getting started","content":"\r\n# How to start in 60 seconds\r\n\r\n1. Make sure you've installed .Net Core version defined in [global.json](global.json)\r\n2. Run `dotnet tool restore` to install all developer tools required to build the project\r\n3. Run `dotnet fake build` to build default target of [build script](build.fsx)\r\n4. To run tests use `dotnet fake build -t Test`\r\n5. To build documentation use `dotnet fake build -t Docs`\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/tutorials/some-post.html","title":"Some Post","content":"\r\n# Some Post\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nisi diam, vehicula quis blandit id, suscipit sed libero. Proin at diam dolor. In hac habitasse platea dictumst. Donec quis dui vitae quam eleifend dignissim non sed libero. In hac habitasse platea dictumst. In ullamcorper mollis risus, a vulputate quam accumsan at. Donec sed felis sodales, blandit orci id, vulputate orci.\r\n\r\nIn est nulla, ornare vitae elit sed, consequat sollicitudin dui. Duis posuere nulla malesuada elit volutpat ultricies. Mauris et tellus tortor. In ligula elit, pellentesque eget est et, mattis rhoncus nisl. Sed orci ex, mollis quis justo eu, dapibus tincidunt turpis. Sed rhoncus odio non lacus ullamcorper volutpat. Suspendisse blandit ullamcorper condimentum. Quisque et viverra nisi. Vivamus in mollis nulla. Nulla faucibus sed ligula et blandit.\r\n\r\nVivamus nec libero faucibus, cursus ex et, consequat mauris. Pellentesque commodo ullamcorper vestibulum. Donec efficitur, ipsum et dapibus varius, purus mauris gravida augue, eu mattis lorem turpis eget dui. Curabitur nibh erat, posuere sed eros a, blandit venenatis risus. Vestibulum cursus imperdiet ultrices. In eu efficitur dui, eget tempus enim. Nunc imperdiet, enim et sagittis lacinia, lacus metus eleifend purus, blandit pellentesque leo ante ac velit. Nam ac sagittis est. Cras accumsan, odio vel lacinia mollis, metus tortor malesuada nisi, et consectetur neque quam in erat. Sed ultricies aliquam hendrerit. Etiam non aliquam ipsum, id rutrum magna. Morbi id tincidunt mauris. Vestibulum nec iaculis massa. Etiam fringilla, orci quis faucibus vulputate, risus nibh finibus nisl, et vehicula ipsum leo a tortor. Curabitur mauris elit, bibendum vitae velit at, dignissim ornare arcu.\r\n\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/explanations/overview.html","title":"FSharpColors Overview","content":"\r\n(***hide***)\r\n#r \"../../../src/FSharpColors/bin/Release/netstandard2.0/FSharpColors.dll\"\r\n\r\n(**\r\n# FSharpColors\r\n\r\nFSharpColors is a lightweight utility library to create and manipulate colors completely written in F#.\r\n*)\r\n\r\nopen FSharpColors\r\n\r\nColor.fromRGB 13 3 7\r\n\r\n(**\r\nHere is the current feature set:\r\n\r\n - Converting bewteen\r\n   - (a) r g b values\r\n   - \"(a)rgb(...)\" strings\r\n   - c m y k values \r\n   - \"cmyk(...)\" strings\r\n   - W3C conform color keywords (such as \"cyan\" for rgb(0,255,255))\r\n   - hex strings (also with 0x prefix)\r\n   - webcolors (hex strings without 0x and w # prefix)\r\n\r\n - DU abstraction of all W3C conform color keywords\r\n*)"},{"uri":"https://kMutagene.github.io/FSharpColors/how-tos/createColors.html","title":"Creating Colors","content":"\r\n(***hide***)\r\n#r \"../../../build/FSharpColors.dll\"\r\nopen FSharpColors\r\n\r\n(**\r\nCreating colors from input\r\n--------------------------\r\nFSharpColors supports parsing both raw color values and string representations (often found on the web) of them\r\n\r\n### (a)rgb\r\n*)\r\n\r\nColor.fromARGB 100 100 100 100\r\nColor.fromARGBString \"argb(100,100,100,100)\"\r\n\r\nColor.fromRGB 100 100 100\r\nColor.fromRGBString \"rgb(100,100,100)\"\r\n\r\n(**\r\n### cmyk\r\n*)\r\n\r\nColor.fromCMYK 0. 0. 0. 0.60\r\nColor.fromCMYKString \"cmyk(0%,0%,0%,60%)\"\r\n\r\n(**\r\n### Hex\r\n*)\r\n\r\n//for hex strings, parsing both with and without the prefix is supported\r\nColor.fromHexString \"FFFFFF\"\r\nColor.fromHexString \"0xFFFFFF\"\r\n\r\n(**\r\n### Webcolors\r\n*)\r\n\r\nColor.fromWebColorString \"#FFFFFF\"\r\nColor.fromStandardWebColor StandardWebColor.AntiqueWhite\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/how-tos/script.html","title":"Sample sample","content":"\r\n(**\r\nLiterate script\r\n===============\r\n\r\nThis file demonstrates how to write literate F# script\r\nfiles (`*.fsx`) that can be transformed into nice HTML\r\n\r\nAs you can see, a comment starting with double asterisk\r\nis treated as part of the document and is transformed\r\nusing Markdown, which means that you can use:\r\n\r\n - Unordered or ordered lists\r\n - Text formatting including **bold** and _emphasis_\r\n\r\nAnd numerous other [Markdown][md] features.\r\n\r\n [md]: http://daringfireball.net/projects/markdown\r\n\r\nWriting F# code\r\n---------------\r\nCode that is not inside comment will be formatted as\r\na sample snippet (which also means that you can\r\nrun it in Visual Studio or MonoDevelop).\r\n*)\r\n\r\n/// The Hello World of functional languages!\r\nlet rec factorial x =\r\n  if x = 0 then 1\r\n  else x * (factorial (x - 1))\r\n\r\nlet f10 = factorial 10\r\n\r\n(**\r\nHiding code\r\n-----------\r\n\r\nIf you want to include some code in the source code,\r\nbut omit it from the output, you can use the `hide`\r\ncommand.\r\n*)\r\n\r\n(*** hide ***)\r\n/// This is a hidden answer\r\nlet hidden = 42\r\n\r\n(**\r\nThe value will be defined in the F# code and so you\r\ncan use it from other (visible) code and get correct\r\ntool tips:\r\n*)\r\n\r\nlet answer = hidden\r\n\r\n(**\r\nMoving code around\r\n------------------\r\n\r\nSometimes, it is useful to first explain some code that\r\nhas to be located at the end of the snippet (perhaps\r\nbecause it uses some definitions discussed in the middle).\r\nThis can be done using `include` and `define` commands.\r\n\r\nThe following snippet gets correct tool tips, even though\r\nit uses `laterFunction`:\r\n*)\r\n\r\n(*** include:later-bit ***)\r\n\r\n(**\r\nThen we can explain how `laterFunction` is defined:\r\n*)\r\n\r\nlet laterFunction() =\r\n  \"Not very difficult, is it?\"\r\n\r\n(**\r\nThis example covers pretty much all features that are\r\ncurrently implemented in `literate.fsx`, but feel free\r\nto [fork the project on GitHub][fs] and add more\r\nfeatures or report bugs!\r\n\r\n  [fs]: https://github.com/fsprojects/FSharp.Formatting\r\n\r\n*)\r\n\r\n(*** define:later-bit ***)\r\nlet sample =\r\n  laterFunction()\r\n  |> printfn \"Got: %s\""},{"uri":"https://kMutagene.github.io/FSharpColors/reference/FSharpColors/index.html","title":"FSharpColors - API Reference","content":"FSharpColors \n FSharpColors"},{"uri":"https://kMutagene.github.io/FSharpColors/reference/FSharpColors/fsharpcolors-table.html","title":"Table","content":"Table \n  \n Office <p>Color palette from Microsoft office 2016</p>\r\n\r\n StatisticalGraphics24  \n  \n black  blackLite  white  \n "},{"uri":"https://kMutagene.github.io/FSharpColors/reference/FSharpColors/fsharpcolors-table-office.html","title":"Office","content":"Office \n <p>Color palette from Microsoft office 2016</p>\r\n\r\n \n  \n  \n blue  lightBlue  darkBlue  red  lightRed  orange  lightOrange  yellow  lightYellow  darkYellow  green  lightGreen  darkGreen  grey  lightGrey  \n "},{"uri":"https://kMutagene.github.io/FSharpColors/reference/FSharpColors/fsharpcolors-table-statisticalgraphics24.html","title":"StatisticalGraphics24","content":"StatisticalGraphics24 \n  \n  \n  \n a  \n "},{"uri":"https://kMutagene.github.io/FSharpColors/reference/FSharpColors/fsharpcolors-color.html","title":"Color","content":"Color \n <p>Color structure</p>\r\n\r\n \n fromARGB <p>Creates a Color structure from the four ARGB component (alpha, red, green, and blue) values.</p>\r\n\r\n fromARGBString <p>Creates a Color structure from the specified argb encoding string (e.g. \"argb(255,255,255,255)\").</p>\r\n\r\n fromCMYK  fromCMYKString  fromColorKeyword <p>Creates a Color structure from the given W3C conform standard web color keyword .</p>\r\n\r\n fromHexString <p>Gets color from hex representataion (FFFFFF) or (0xFFFFFF)</p>\r\n\r\n fromRGB <p>Creates a Color structure from the specified color values (red, green, and blue).\r\nThe alpha value is implicitly 255 (fully opaque).</p>\r\n\r\n fromRGBString <p>Creates a Color structure from the specified argb encoding string (e.g. \"argb(255,255,255,255)\").</p>\r\n\r\n fromStandardWebColor <p>Creates a Color structure from the given W3C conform standard web color type.</p>\r\n\r\n fromWebColorString <p>Gets color from web color (#FFFFFF)</p>\r\n\r\n getHue <p>Gets the hue-saturation-brightness (HSB) hue value, in degrees, for this Color structure.</p>\r\n\r\n getMaxRGB <p>Returns the highest color component of the given color</p>\r\n\r\n getMinRGB <p>Returns the lowest color component of the given color</p>\r\n\r\n getSaturation <p>Gets the hue-saturation-brightness (HSB) saturation value for this Color structure.</p>\r\n\r\n toARGB <p>Gets the 32-bit ARGB value of this Color structure.</p>\r\n\r\n toARGBString  toCMYK  toCMYKString  toHexString <p>Gets the hex representataion (FFFFFF) of a color (with valid prefix \"0xFFFFFF\")</p>\r\n\r\n toRGB  toRGBString  toString <p>Converts this Color structure to a human-readable string.</p>\r\n\r\n toWebColorString <p>Gets the web color representataion (#FFFFFF)</p>\r\n\r\n A <p>The alpha component value of this Color structure.</p>\r\n\r\n R <p>The red component value of this Color structure.</p>\r\n\r\n G <p>The green component value of this Color structure.</p>\r\n\r\n B <p>The blue component value of this Color structure.</p>\r\n\r\n"},{"uri":"https://kMutagene.github.io/FSharpColors/reference/FSharpColors/fsharpcolors-colorcomponent.html","title":"ColorComponent","content":"ColorComponent \n <p>Color component ARGB</p>\r\n\r\n \n getComponentValue  A  R  G  B "},{"uri":"https://kMutagene.github.io/FSharpColors/reference/FSharpColors/fsharpcolors-standardwebcolor.html","title":"StandardWebColor","content":"StandardWebColor \n <p>W3C Recognized color keyword names</p>\r\n\r\n \n ofRGB  toRGB  ofKeyWord  AliceBlue  AntiqueWhite  Aqua  Aquamarine  Azure  Beige  Bisque  Black  BlanchedAlmond  Blue  Blueviolet  Brown  BurlyWood  CadetBlue  Chartreuse  Chocolate  Coral  CornflowerBlue  CornSilk  Crimson  Cyan  DarkBlue  DarkCyan  DarkGoldenRod  DarkGray  DarkGreen  DarkGrey  DarkKhaki  DarkMagenta  Darkolivegreen  DarkOrange  DarkOrchid  DarkRed  DarkSalmon  DarkSeaGreen  DarkSlateBlue  DarkSlateGray  DarkSlateGrey  DarkTurquoise  DarkViolet  DeepPink  DeepSkyBlue  DimGray  DimGrey  DodgerBlue  FireBrick  FloralWhite  ForestGreen  Fuchsia  Gainsboro  GhostWhite  Gold  GoldenRod  Gray  Grey  Green  GreenYellow  Honeydew  Hotpink  IndianRed  Indigo  Ivory  Khaki  Lavender  LavenderBlush  LawnGreen  LemonChiffon  LightBlue  LightCoral  LightCyan  LightGoldenRodYellow  LightGray  LightGreen  LightGrey  LightPink  LightAalmon  LightAeaGreen  LightAkyBlue  LightAlateGray  LightslateGrey  LightSteelBlue  LightYellow  Lime  Limegreen  Linen  Magenta  Maroon  MediumAquamarine  MediumBlue  MediumOrchid  MediumPurple  MediumSeaGreen  MediumSlateBlue  MediumSpringGreen  MediumTurquoise  MediumVioletRed  MidnightBlue  MintCream  MistyRose  Moccasin  NavajoWhite  Navy  OldLace  Olive  OliveDrab  Orange  OrangeRed  Orchid  PaleGoldenRod  PaleGreen  PaleTurquoise  PaleVioletRed  PapayaWhip  PeachPuff  Peru  Pink  Plum  PowderBlue  Purple  Red  RosyBrown  RoyalBlue  SaddleBrown  Salmon  SandyBrown  SeaGreen  SeaShell  Sienna  Silver  Skyblue  SlateBlue  SlateGray  SlateGrey  Snow  SpringGreen  SteelBlue  Tan  Teal  Thistle  Tomato  Turquoise  Violet  Wheat  White  WhiteSmoke  Yellow  YellowGreen "}]